{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ToDoList',\n  data: () => ({\n    newTodo: '',\n    todos: [],\n    filter: null\n  }),\n  methods: {\n    addTodo() {\n      this.todos.push({\n        title: this.newTodo,\n        done: false\n      });\n      this.newTodo = '';\n    },\n\n    removeTodo(todo) {\n      const todoIndex = this.todos.indexOf(todo);\n      this.todos.splice(todoIndex, 1);\n    },\n\n    allDone() {\n      this.todos.forEach(todo => {\n        todo.done = true;\n      });\n    },\n\n    allRemove() {\n      this.todos = [];\n    },\n\n    toggleFilter(type) {\n      if (this.filter === type) {\n        this.filter = null;\n      } else {\n        this.filter = type;\n      }\n    },\n\n    clearFilter() {\n      this.filter = null;\n    }\n\n  },\n  computed: {\n    filteredTodos() {\n      if (this.filter === 'done') {\n        return this.todos.filter(todo => todo.done);\n      } else if (this.filter === 'undone') {\n        return this.todos.filter(todo => !todo.done);\n      } else {\n        return this.todos;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA0DA,eAAe;EACbA,IAAI,EAAE,UADO;EAGbC,IAAI,EAAE,OAAO;IACXC,OAAO,EAAE,EADE;IAEXC,KAAK,EAAE,EAFI;IAGXC,MAAM,EAAE;EAHG,CAAP,CAHO;EASbC,OAAO,EAAE;IACPC,OAAO,GAAG;MACR,KAAKH,KAAL,CAAWI,IAAX,CAAgB;QACdC,KAAK,EAAE,KAAKN,OADE;QAEdO,IAAI,EAAE;MAFQ,CAAhB;MAIA,KAAKP,OAAL,GAAe,EAAf;IACD,CAPM;;IAQPQ,UAAU,CAACC,IAAD,EAAO;MACf,MAAMC,SAAQ,GAAI,KAAKT,KAAL,CAAWU,OAAX,CAAmBF,IAAnB,CAAlB;MACA,KAAKR,KAAL,CAAWW,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;IACD,CAXM;;IAYPG,OAAO,GAAG;MACR,KAAKZ,KAAL,CAAWa,OAAX,CAAmBL,IAAG,IAAK;QACzBA,IAAI,CAACF,IAAL,GAAY,IAAZ;MACD,CAFD;IAGD,CAhBM;;IAiBPQ,SAAS,GAAG;MACV,KAAKd,KAAL,GAAa,EAAb;IACD,CAnBM;;IAoBPe,YAAY,CAACC,IAAD,EAAO;MACjB,IAAI,KAAKf,MAAL,KAAgBe,IAApB,EAA0B;QACxB,KAAKf,MAAL,GAAc,IAAd;MACF,CAFA,MAEO;QACL,KAAKA,MAAL,GAAce,IAAd;MACF;IACD,CA1BM;;IA2BPC,WAAW,GAAG;MACZ,KAAKhB,MAAL,GAAc,IAAd;IACF;;EA7BO,CATI;EAwCbiB,QAAQ,EAAE;IACRC,aAAa,GAAG;MACd,IAAI,KAAKlB,MAAL,KAAgB,MAApB,EAA4B;QAC1B,OAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBO,IAAG,IAAKA,IAAI,CAACF,IAA/B,CAAP;MACF,CAFA,MAEO,IAAI,KAAKL,MAAL,KAAgB,QAApB,EAA8B;QACnC,OAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBO,IAAG,IAAK,CAACA,IAAI,CAACF,IAAhC,CAAP;MACF,CAFO,MAEA;QACL,OAAO,KAAKN,KAAZ;MACF;IACF;;EATQ;AAxCG,CAAf","names":["name","data","newTodo","todos","filter","methods","addTodo","push","title","done","removeTodo","todo","todoIndex","indexOf","splice","allDone","forEach","allRemove","toggleFilter","type","clearFilter","computed","filteredTodos"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Downloads\\28-pbk-uts-223510373-main\\src\\components\\ToDoList.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\" style=\"width: 40em\">\n    <div class=\"card m-3\">\n      <div class=\"card-header\">\n        <form @submit.prevent=\"addTodo\">\n          <div class=col-12>\n            <div class=\"row\">\n              <div class=\"col-3\">\n                <label for=\"newTodo\" class=\"form-label\">Tambahkan</label>\n              </div>\n              <div class=\"col-7\">\n                <input v-model=\"newTodo\" type=\"text\" class=\"form-control form-control-sm\" name=\"newTodo\" id=\"newTodo\">\n              </div>\n              <div class=\"col-2\">\n                <button class=\"btn btn-primary btn-sm float-end\" type=\"submit\" name=\"button\">\n                  <i class=\"bi bi-plus\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"float-end\">\n          <button class=\"btn btn-success btn-sm me-1\" @click=\"allDone\" type=\"button\" name=\"button\">\n            <i class=\"bi bi-check-all\"></i>\n          </button>\n          <button class=\"btn btn-danger btn-sm me-1\" @click=\"allRemove\" type=\"button\" name=\"button\">\n            <i class=\"bi bi-trash-fill\"></i>\n          </button>\n          <!-- New Buttons for Filter -->\n          <button class=\"btn btn-primary btn-sm me-1\" @click=\"toggleFilter('done')\" type=\"button\" name=\"button\">\n            \n          </button>\n          <button class=\"btn btn-primary btn-sm me-1\" @click=\"toggleFilter('undone')\" type=\"button\" name=\"button\">\n            Unchecked\n          </button>\n          <button class=\"btn btn-primary btn-sm\" @click=\"clearFilter\" type=\"button\" name=\"button\">\n            Clear\n          </button>\n        </div>\n      </div>\n      <ul class=\"list-group list-group-flush list-group-numbered\">\n        <li class=\"list-group-item\" v-for=\"todo in filteredTodos\" :key=\"todo\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"todo.done\" id=\"flexCheckDefault\">\n          <label class=\"form-check-label ms-3\" for=\"flexCheckDefault\" :class=\"{ done: todo.done }\">\n            {{todo.title}}\n          </label>\n          <button @click=\"removeTodo(todo)\" class=\"btn btn-danger btn-sm float-end\" type=\"button\" name=\"button\">\n            <i class=\"bi bi-trash-fill\"></i>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ToDoList',\n\n  data: () => ({\n    newTodo: '',\n    todos: [],\n    filter: null\n  }),\n\n  methods: {\n    addTodo() {\n      this.todos.push({\n        title: this.newTodo,\n        done: false\n      });\n      this.newTodo = '';\n    },\n    removeTodo(todo) {\n      const todoIndex = this.todos.indexOf(todo);\n      this.todos.splice(todoIndex, 1);\n    },\n    allDone() {\n      this.todos.forEach(todo => {\n        todo.done = true;\n      });\n    },\n    allRemove() {\n      this.todos = [];\n    },\n    toggleFilter(type) {\n      if (this.filter === type) {\n        this.filter = null;\n      } else {\n        this.filter = type;\n      }\n    },\n    clearFilter() {\n      this.filter = null;\n    }\n  },\n  computed: {\n    filteredTodos() {\n      if (this.filter === 'done') {\n        return this.todos.filter(todo => todo.done);\n      } else if (this.filter === 'undone') {\n        return this.todos.filter(todo => !todo.done);\n      } else {\n        return this.todos;\n      }\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}